{
  "gear": {
    "name": "dicom-send",
    "label": "DCMTK: DICOM Send",
    "description": "DICOM Send utilizes DCMTK's storescu to send DICOM data from a Flywheel instance to a destination DICOM server, hosted externally. This Gear supports the transmission of individual DICOM files and archives, as well as the transmission of an entire session when a specific input is not provided. Note that a private tag is added to each DICOM file to be transmitted (Flywheel:DICOM Send, at group 0x0021). Importantly, the external DICOM server must be reachable from the engine host of the Flywheel instance.",
    "version": "1.1.1",
    "inputs": {
      "file": {
        "base": "file",
        "description": "Any DICOM file or an archive (zip or tar) containing DICOM file(s). Non DICOM files are ignored. If no input is provided, all DICOM files in the session where the Gear is executed are downloaded and used as input.",
        "type": {
          "enum": [
            "dicom"
          ]
        },
        "optional": true
      },
      "api_key": {
        "base": "api-key",
        "read-only": true
      }
    },
    "config": {
      "destination": {
        "description": "The IP address or hostname of the destination DICOM server. Note: The server must be reachable from the engine host of the Flywheel instance.",
        "type": "string"
      },
      "called_ae": {
        "description": "The Called AE title of the receiving DICOM server.",
        "type": "string"
      },
      "calling_ae": {
        "description": "The Calling AE title. Default = flywheel",
        "type": "string",
        "default": "flywheel"
      },
      "port": {
        "description": "Port number of the listening DICOM service. Default = 104",
        "type": "number",
        "default": 104
      }
    },
    "author": "Flywheel",
    "maintainer": "Flywheel <support@flywheel.io>",
    "license": "Other",
    "source": "https://github.com/flywheel-apps/dicom-send",
    "url": "http://support.dcmtk.org/docs/storescu.html",
    "custom": {
      "gear-builder": {
        "category": "converter",
        "image": "flywheel/dicom-send:1.1.1"
      },
      "flywheel": {
        "suite": "DCMTK"
      }
    },
    "command": "python3 run.py"
  },
  "exchange": {
    "git-commit": "d5ba82a747091cc74ecaabac0c0e6a29595ef296",
    "rootfs-hash": "sha384:d895708539c81f6670c7d4006edbbdcf5941cb9a16440177820c9238a872c6dca6471e20c8ffe1995476f9526cc5404d",
    "rootfs-url": "https://storage.googleapis.com/flywheel-exchange/flywheel-dicom-send-sha384-d895708539c81f6670c7d4006edbbdcf5941cb9a16440177820c9238a872c6dca6471e20c8ffe1995476f9526cc5404d.tgz"
  },
  "invocation-schema": {
    "title": "Invocation manifest for DCMTK: DICOM Send",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "config": {
        "type": "object",
        "properties": {
          "destination": {
            "type": "string"
          },
          "called_ae": {
            "type": "string"
          },
          "calling_ae": {
            "type": "string",
            "default": "flywheel"
          },
          "port": {
            "type": "number",
            "default": 104
          }
        },
        "required": [
          "destination",
          "called_ae",
          "calling_ae",
          "port"
        ]
      },
      "inputs": {
        "type": "object",
        "properties": {
          "file": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "dicom"
                ]
              }
            }
          },
          "api_key": {
            "type": "object"
          }
        },
        "required": [
          "api_key"
        ]
      }
    },
    "required": [
      "config",
      "inputs"
    ]
  }
}
